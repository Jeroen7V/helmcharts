---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-bookstack-env
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/component: bookstack
data:
  PUID: {{ .Values.puid | quote }}
  PGID: {{ .Values.pgid | quote }}
  APP_URL: {{ .Values.app_url | quote }}
  {{- if not .Values.db.host }}
  DB_HOST: "{{ .Release.Name }}-mariadb"
  {{- else }}
  DB_HOST: {{ .Values.db.host | quote }}
  {{- end }}
  DB_USER: {{ .Values.db.user | quote }}
  DB_PASS: {{ .Values.db.pass | quote }}
  DB_DATABASE: {{ .Values.db.name | quote }}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Release.Name }}-bookstack
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/name: bookstack
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.app.storage.size }}
  storageClassName: {{ .Values.global.storageclass | quote }}


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-bookstack
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/name: bookstack
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/name: bookstack
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/name: bookstack
    spec:
      containers:
        - name: {{ .Release.Name }}-bookstack
          image: "{{ .Values.app.image.name }}:{{ .Values.app.image.tag }}"
          ports:
            - containerPort: 80
              name: web
              protocol: TCP
          volumeMounts:
            - name: {{ .Release.Name }}-bookstack
              mountPath: /config
      volumes:
        - name: {{ .Release.Name }}-bookstack
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-bookstack

---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-bookstack
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/name: bookstack
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/name: bookstack
  ports:
    - name: web
      port: 80
      protocol: TCP
      targetPort: 80

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Release.Name }}-bookstack
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/name: bookstack
  annotations:
{{ toYaml .Values.ingress.annotations | indent 4 }}
spec:
  rules:
    - host: {{ .Values.app_url }}
      http:
        paths:
          - backend:
              service:
                name: {{ .Release.Name }}-bookstack
                port:
                  name: web
            path: /
            pathType: Prefix
  tls:
    - hosts:
        - {{ .Values.app_url }}
      secretname: {{ .Release.Name }}-bookstack-ssl
