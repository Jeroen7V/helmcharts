---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-joplin-env
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/part-of: {{ .Release.Name }}
    app.kubernetes.io/component: application
    app.kubernetes.io/name: joplin
data:
  APP_BASE_URL: {{ .Values.global.app_url | quote }}
  APP_PORT: {{ .Values.joplin.port | quote }}
  DB_CLIENT: pg
  POSTGRES_HOST: {{ .Values.postgres.host | default (printf "%s-pgsql" .Release.Name) | quote }}
  POSTGRES_PORT: {{ .Values.postgres.port | quote }}
  POSTGRES_DATABASE: {{ .Values.postgres.name | quote }}
  POSTGRES_USER: {{ .Values.postgres.user | quote }}
  POSTGRES_PASSWORD: {{ .Values.postgres.pass | quote }}

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Release.Name }}-joplin
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/part-of: {{ .Release.Name }}
    app.kubernetes.io/component: application
    app.kubernetes.io/name: joplin
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.joplin.storage.size }}
  storageClassName: {{ .Values.global.storageclass | quote }}


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-joplin
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/part-of: {{ .Release.Name }}
    app.kubernetes.io/component: application
    app.kubernetes.io/name: joplin
spec:
  selector:
    matchLabels:
      app.kubernetes.io/part-of: {{ .Release.Name }}
      app.kubernetes.io/component: application
      app.kubernetes.io/name: joplin
  template:
    metadata:
      labels:
        app.kubernetes.io/part-of: {{ .Release.Name }}
        app.kubernetes.io/component: application
        app.kubernetes.io/name: joplin
    spec:
      containers:
        - name: {{ .Release.Name }}-joplin
          image: "{{ .Values.joplin.image.name }}:{{ .Values.joplin.image.tag }}"
          ports:
            - containerPort: {{ .Values.joplin.port | quote }}
              name: web
              protocol: TCP
          volumeMounts:
            - name: {{ .Release.Name }}-joplin
              mountPath: /config
          envFrom:
          - configMapRef:
              name: {{ .Release.Name }}-joplin-env
      volumes:
        - name: {{ .Release.Name }}-joplin
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-joplin

---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-joplin
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/part-of: {{ .Release.Name }}
    app.kubernetes.io/component: application
    app.kubernetes.io/name: joplin
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/part-of: {{ .Release.Name }}
    app.kubernetes.io/component: application
    app.kubernetes.io/name: bookstack
  ports:
    - name: web
      port: 80
      protocol: TCP
      targetPort: {{ .Values.joplin.port | quote }}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Release.Name }}-joplin
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/part-of: {{ .Release.Name }}
    app.kubernetes.io/component: application
    app.kubernetes.io/name: joplin
  annotations:
    {{- range $key, $val := .Values.ingress.annotations }}
    {{- if $val }}
    {{ $key }}: {{ $val }}
    {{- end }}
    {{- end }}
spec:
  rules:
    - host: {{ .Values.global.app_url }}
      http:
        paths:
          - backend:
              service:
                name: {{ .Release.Name }}-joplin
                port:
                  name: web
            path: /
            pathType: Prefix
  {{- if .Values.ingress.tls }}
  tls:
    - hosts:
        - {{ .Values.global.app_url }}
      secretName: {{ .Release.Name }}-joplin-ssl
  {{- end }}
